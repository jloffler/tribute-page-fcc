/* === === ===
jloffler
2021
Written for - freeCodeCamp Tribute Page project

Swatch colours
*
*
=== === === */

/* === TO DO ===
 - need to make body not grow to fit photos, but only to be vp size
     container for the images?
*/

/*
Table of Conents
 - Resets and overrides
 - Links and type
 - Main layout
 - Secondary layout structures
 - Form elements
 - Misc
 */

/* *** Resets and Overrides *** */
:root {
  /* this won't work in @media declaration */
  --mobile-desktop-brkpt: 700px;
}

html {
  font-size: 112.5%;
}

body {
  width: 100%;
  background-color: #fff;
  color: #000;
  font-family: Arial, sans-serif;
  font-size: 1rem;
  line-height: 1.5em;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

img {
  display: block;
}

/* *** Links and Type *** */
p,
li,
blockquote {
  color: rgba(0, 0, 0, 0.87);
}

h1 {
  font-size: 2rem;
  margin-bottom: 1em;
}

h2 {
  font-size: 1.5rem;
  margin-bottom: 1em;  
}

/* *** Main Layout *** */

/* #SPLASH-IMAGE */
#splash-image {
  width: 100%;
  height: auto;
  margin-bottom: 1em;
}

@media screen and (min-width: 700px) {
  #splash-image {
    position: fixed;
    top: 0;
    margin: 0;
    padding: 0;
    height: 100vh;
    width: 100%;
    z-index: -1;
    border: 10px solid yellow;
  }
}

/* .HEADER */
header {
  width: 100%;
  text-align: center;
}

.desktop-splash-quote,
.scroll-down {
  display: none;
}

@media screen and (min-width: 700px) {
  header {
    height: 100vh;
    background-color: rgba(0, 0, 0, 0);
    background-image: linear-gradient(to bottom, rgba(255,255,255,0) 75%, rgba(255,255,255,1));
    color: black;
    text-align: center;
    position: relative;
  }

  .header-wrap {
    background-color: rgba(128, 128, 128, 0.5);
    margin: 0 15vw 0 15vw;
    padding: 0.5em;
    border-radius: 1.2em;
    position: absolute;
    bottom: 2rem;
  }

  .desktop-splash-quote {
    font-size: 2.5rem;
    font-weight: 800;
    line-height: 1.2em;
    margin: 0 0 0.7em 0;
  }

  #title {
    font-size: 2.5rem;
    margin: 0 0 0.4em 0;
  }
}

/* .CONTENT-CONTAINER */
.content-container {
  background-color: #fff;
}

#main {
  width: 95%;
  margin: 0 auto 0 auto;
}

@media screen and (min-width: 700px) {
  #main {
    max-width: 700px;
  }
}

/* .INTRODUCTION-WRAP */
.introduction-wrap {
  display: flex;
  flex-direction: row-reverse;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.quote {
  display: block;
  font-family: "Times New Roman", "Times", serif;
  font-size: 1.2rem;
  max-width: 85%;
  margin: 0 auto 2em auto;
}

#img-div {
  text-align: center;
  margin-bottom: 2em;
}

#image {
  width: 100%;
  height: auto;
}

@media screen and (min-width: 700px) {
  .introduction-wrap {
    flex-direction: row-reverse;
    max-width: 90vw;
    margin: 0 auto 0 auto;
  }

  .quote {
    max-width: 20em;
    margin: 0 30px 0 30px;
    font-size: 1.5rem;
    line-height: 1.9em;
    letter-spacing: 0.04em;
    font-weight: 600;
  }

  #image {
    /*
    image size:
    should be set by height?
    but it should have a max and min height.
    MOBILE:
    should be set by width--not quite full width--quote should also be set by;
    
    Is there some setup that won't use media queires? by width? always have some 
    margin or padding (for mobile edges).

    With flexbox, can you make something LIKE a certain size, but accept a different size
      I guess it should only go side by side when maxed? or have a minimum width?
         and with MINIMUM WIDTH -- that's when it goes single
    */
    height: 60vh;
    max-height: 4500px; /* height of image file */
    width: auto;
  }
}

/*
#main {
  max-width: 90vw;
  margin: 2em auto 0 auto;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-wrap: wrap;
}
*/

/* WRITE-UP */
.write-up {
  /*max-width: 700px;*/
  margin-bottom: 2em;
}

.write-up p {
  text-indent: 1.5em;
  /*line-height: 1.3em;*/
  /*margin: 0 0 1em 0;*/
  margin-bottom: 1em;
}

/* BULLET-POINTS */
.bullet-list {
  margin-bottom: 2em;
  /*max-width: 300px;*/
  /*margin: 0 2em 0 2em;*/
}

.bullet-list ul {
  list-style-position: inside;
  /*line-height: 1.5em;*/
  margin-left: 1em;
}

/* Indent nested lists */
ul > ul {
  margin-left: 1em;
}

li {
  margin-bottom: 0.3em;
}

/* EXTERNAL LINKS */
.external-links {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around; /* main axis */
  padding-bottom: 1em;
}

.off-page-nav-link {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 8.5em;
  height: 8.5em;
  background: #fff;
  border: 2px solid black;
  border-radius: 1em;
  margin: 1em;
}

/* FOOTER */
footer {
  padding: 2em 2.5% 0 2.5%;
  background: #000;
  color: #fff;
  /* White to black */
  /*
  background-image: linear-gradient(to bottom, 
                                    rgba(255, 255, 255),
                                    rgba(0, 0, 0) 40%);
  */
}

@media screen and (min-width: 700px) {
  footer {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
  }

  .footer-nav {
    padding-right: 2em;
  }
}

footer ul {
  list-style-type: none;
  margin-bottom: 2em;
}

footer a {
  color: #fff;
}

footer a:visited {
  color: #B47EE7;
}

.footer-nav {
  display: inline;
}

.footer-h2 {
  font-size: 1rem;
  font-weight: 700;
  margin: 0;
}

.footer-link,
.footer-link:visited {
  text-decoration: none;
  color: white;
  cursor: pointer;
}

.footer-link:hover,
.footer-link:active,
.footer-link:focus {
  text-decoration: underline;
}

.footer-p {
  color: #fff;
}

/* 
 * - Image should take up full width, until bigger than max size.
 * - After max size, it should stay centered, with vert. black bars.
 */
#footer-image {
  display: block;
  /* images default to inline, which leaves space for descenders */
  overflow-x: hidden;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 70vh;
  /*border: 10px solid red;*/
  /*position: absolute;*/
  bottom: 0;
  left: 0;
  z-index: -1;
}